{"version":3,"sources":["src/class_methods_overload.ts"],"names":[],"mappings":";;;;AAAA,IAAA,SAAA,GAAA,YAAA;AACI,WAAA,SAAA,CAAmB,GAAnB,EAAqC;AAAlB,SAAA,GAAA,GAAA,GAAA;AAClB;;AACD,EAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,CAAJ,EAAa;AACT,WAAO,KAAK,GAAL,CAAS,CAAT,CAAP;AACH,GAFD;;AAGA,EAAA,SAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACI,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,GAAjB;AACH,GAFD;;AAKA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,KAAP,EAAiB;AACb,QAAG,OAAO,KAAP,KAAiB,QAApB,EAA6B;AACzB,WAAK,GAAL,CAAS,MAAT,CAAgB,KAAhB,EAAuB,CAAvB;AACH,KAFD,MAEK;AACD,WAAK,GAAL,GAAW,KAAK,GAAL,CAAS,MAAT,CAAgB,UAAA,GAAA,EAAG;AAAI,eAAA,GAAG,KAAK,KAAR;AAAa,OAApC,CAAX;AACH;;AACD,WAAO,KAAP;AACH,GAPD;;AAQJ,SAAA,SAAA;AAnBA,CAAA,EAAA;;AAqBA,IAAI,IAAI,GAAG;AAAC,EAAA,IAAI,EAAE,UAAP;AAAmB,EAAA,GAAG,EAAE;AAAxB,CAAX;AACA,IAAI,IAAI,GAAG;AAAC,EAAA,IAAI,EAAE,MAAP;AAAe,EAAA,GAAG,EAAE;AAApB,CAAX;AACA,IAAI,IAAI,GAAG;AAAC,EAAA,IAAI,EAAE,QAAP;AAAiB,EAAA,GAAG,EAAE;AAAtB,CAAX;AACA,IAAM,IAAI,GAAG,IAAI,SAAJ,CAAc,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAd,CAAb;AACA,IAAI,CAAC,MAAL,CAAY,IAAZ;AACA,IAAI,CAAC,IAAL;;AAMA,IAAA,IAAA,GAAA,YAAA;AAKI,WAAA,IAAA,CAAY,KAAZ,EAAwB,MAAxB,EAA0C;AAAlB,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,CAAA;AAAkB;;AACvC,QAAG,QAAO,KAAP,MAAiB,QAApB,EAA6B;AACzB,WAAK,KAAL,GAAa,KAAK,CAAC,KAAnB;AACA,WAAK,MAAL,GAAc,KAAK,CAAC,MAApB;AACH,KAHD,MAGK;AACA,WAAK,KAAL,GAAa,KAAb;AACA,WAAK,MAAL,GAAc,MAAd;AACJ;AACH;;AACD,EAAA,IAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACI,WAAO,KAAK,KAAL,GAAa,KAAK,MAAzB;AACH,GAFD;;AAGJ,SAAA,IAAA;AAjBA,CAAA,EAAA;;AAkBC,IAAM,EAAE,GAAG,IAAI,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAX;AACA,IAAM,EAAE,GAAG,IAAI,IAAJ,CAAS;AAAC,EAAA,KAAK,EAAE,CAAR;AAAW,EAAA,MAAM,EAAE;AAAnB,CAAT,CAAX","file":"class_methods_overload.db8d26fe.js","sourceRoot":"..","sourcesContent":["class ArrayList {\n    constructor(public ele: Array<object>){\n    }\n    get(i: number){\n        return this.ele[i]\n    }\n    show(){\n        console.log(this.ele)\n    }\n    remove(i: number): number\n    remove(obj: object): object\n    remove(value: any){\n        if(typeof value === 'number'){\n            this.ele.splice(value, 1)\n        }else{\n            this.ele = this.ele.filter(ret => ret !== value)\n        }\n        return value\n    }\n}\n\nlet obj1 = {name: 'zhangsan', age: 21}\nlet obj2 = {name: 'lisi', age: 26}\nlet obj3 = {name: 'wangwu', age: 28}\nconst list = new ArrayList([obj1, obj2, obj3])\nlist.remove(obj3)\nlist.show()\n\ninterface AreaProps {\n    width: number\n    height: number\n}\nclass Size{\n    public width: number\n    public height: number\n    constructor(width: number, height: number)\n    constructor(area: AreaProps)\n    constructor(value: any, height: number = 0){\n       if(typeof value === 'object'){\n           this.width = value.width\n           this.height = value.height\n       }else{\n            this.width = value\n            this.height = height\n       }\n    }\n    size(){\n        return this.width * this.height\n    }\n}\n const a1 = new Size(2, 3)\n const a2 = new Size({width: 3, height: 4})"]}