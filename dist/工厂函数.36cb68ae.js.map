{"version":3,"sources":["src/工厂函数.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,MAAA,GAAA,YAAA;AAGI;AACA,WAAA,MAAA,CAAY,KAAZ,EAA2B,IAA3B,EAAuC;AAHhC,SAAA,IAAA,GAAe,UAAf;AACA,SAAA,GAAA,GAAc,CAAd;AAGH,SAAK,IAAL,GAAY,KAAZ;AACA,SAAK,GAAL,GAAW,IAAX;AACH,GAPL,CAQI;;;AACA,EAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,YAAA,CAAO,CAAP;;AACJ,SAAA,MAAA;AAVA,CAAA,EAAA;;AAWA,OAAO,CAAC,GAAR,CAAY,MAAZ;;AAIA,SAAS,qBAAT,CAAkC,WAAlC,EAAkE;AAC9D,SAAO,IAAI,WAAJ,CAAgB,YAAhB,EAA8B,EAA9B,CAAP;AACH;;AAED,IAAM,EAAE,GAAG,qBAAqB,CAAS,MAAT,CAAhC","file":"工厂函数.36cb68ae.js","sourceRoot":"..","sourcesContent":["class People {\n    public name: string = 'zhangsan'\n    public age: number = 1\n    // constructor People(name_: string, age_: number): People\n    constructor(name_: string, age_: number){\n        this.name = name_\n        this.age = age_\n    }\n    // (method) People.say(): void\n    say(){}\n}\nconsole.dir(People)\n// 通用工厂函数类型\ntype ConstructorProps<T> = new (...arg: any) => T\n\nfunction createInstanceFactory<T>(Constructor: ConstructorProps<T>){\n    return new Constructor('helloWorld', 12)\n}\n\nconst a1 = createInstanceFactory<People>(People)\n\n\n\n\nexport {}"]}